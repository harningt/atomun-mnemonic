import org.ajoberstar.gradle.git.release.opinion.Strategies

plugins {
    id 'java'
    id 'groovy'
    id 'maven'
    id 'signing'
    id 'org.ajoberstar.defaults' version '0.4.0'
}

group = 'us.eharning.atomun'
description = 'Utility library implementing mnemonic <-> bytes conversions.'
sourceCompatibility = 1.7

defaults {
    id = 'harningt'

    developers = [
            [id: 'harningt', name: 'Thomas Harning Jr', email: 'harningt@gmail.com']
    ]

    // used by license plugin
    copyrightYears = '2014'
}

configurations {
    // use local groovy
    all*.exclude group: 'org.codehaus.groovy'
}

release {
    // Adds SNAPSHOT strategy to allowed list to be used by Travis-CI
    versionStrategy Strategies.SNAPSHOT
}

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    compile group: 'com.google.guava', name: 'guava', version: '18.0'

    testCompile localGroovy()
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.3-SNAPSHOT'
}

/* Begin signing + upload logic */

/* All non-snapshots must be signed */
def isRelease = !version.toString().endsWith("SNAPSHOT")
def isSigning = isRelease
def isSigningAllowed = hasProperty('sign') && getProperty('sign') == 'TRUE'

def repo = !isRelease ? 'oss-snapshot-local' : 'oss-release-local'
def artifactory_password = hasProperty("artifactory_password") ? getProperty("artifactory_password") : null
if (null != artifactory_password) {
    signing {
        required { isSigning && isSigningAllowed }
        if (isSigning && isSigningAllowed) {
            sign configurations.archives
        }
    }
}

task uploadDist(type: Upload) {
    configuration = configurations.archives
    repositories {
        mavenDeployer {
            def creds = [
                userName: 'harningt',
                password: artifactory_password
            ]
            /* SETUP TARGET */
            if (!isRelease) {
                repository(url: 'https://oss.jfrog.org/artifactory/oss-snapshot-local/') {
                    authentication(creds)
                }
            } else {
                repository(url: 'https://oss.jfrog.org/artifactory/oss-release-local/') {
                    authentication(creds)
                }
            }
            pom.project {
                name name
                description description
                url defaults.siteUrl
                inceptionYear '2014'
                licenses {
                    license {
                        name 'Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id 'harningt'
                        name 'Thomas Harning Jr'
                        email 'harningt@gmail.com'
                    }
                }
            }
            beforeDeployment { MavenDeployment deployment ->
                if (isSigning && !isSigningAllowed) {
                    throw new Error("Signing is expected but not allowed. Set '-P sign=TRUE' to continue")
                }
                signing.signPom(deployment)
            }
        }
    }
}
/* End signing + upload logic */

wrapper {
    gradleVersion = '2.1'
}
